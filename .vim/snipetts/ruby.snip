snippet     desc
abbr        describe '' do end
prev_word   '^'
    describe '${1:target}' do
        ${2:example}
    end

snippet     cont
abbr        context '' do end
prev_word   '^'
    context '${1:target}' do
        ${2:example}
    end

snippet     bef
abbr        before {}
prev_word   '^'
    before (:${1:each}) { ${2:proc} }

snippet     sub
abbr        subject.method
    subject.${1:method}

snippet     subj
abbr        subject {}
prev_word   '^'
    subject { ${1:expression} }

snippet     it
abbr        it {}
prev_word   '^'
    it { ${1:expression} }

snippet     itl
abbr        it { ->{} }
prev_word   '^'
    it { ->{ ${1:lambda} }.should ${2:change} }

snippet     its
abbr        its(:hoge) {}
prev_word   '^'
    its(:${1:method}) { ${2:expression} }

snippet     let
abbr        let(:hoge) {}
prev_word   '^'
    let(:${1:name}) { ${2:expression} }

snippet     let!
abbr        let!(:hoge) {}
prev_word   '^'
    let!(:${1:name}) { ${2:expression} }

snippet     blon
abbr        belong_to(:hoge)
prev_word   '^'
    it { should belong_to(:${1:assosiation}) }

snippet     haveo
abbr        have_one(:hoge)
prev_word   '^'
    it { should have_one(:${1:assosiation}) }

snippet     havemt
abbr        have_many(:hoge).through(:fuga)
prev_word   '^'
    it { should have_many(:${1:assosiation}).through(:${2:through}) }

snippet     havem
abbr        have_many(:hoge)
prev_word   '^'
    it { should have_many(:${1:assosiation}) }

snippet     cha
abbr        change(Hoge, :fuga)
    change(${1:target}, :${2:method})

snippet     changeby
abbr        change(Hoge, :fuga).by(1)
    change(${1:target}, :${2:method}).by(${3:increment})

snippet     changeto
abbr        change(Hoge, :fuga).from(old).to(new)
    change(${1:target}, :${2:method}).from(${3:old_value}).to(${4:new_value})

snippet     sho
abbr        should
    should be_${1:value}

snippet     shon
abbr        should_not
    should_not be_${1:value}

snippet     shor
abbr        should route_to
    should route_to(controller: ${1:controller}, action: ${2:action})

snippet     asse
abbr        assert_select tag
prev_word   '^'
    assert_select '${1:tag}'${2:,text:}

snippet     assi
abbr        assign(:name, value)
prev_word   '^'
    assign(:${1:name}, ${2:value})

snippet     assig
abbr        assign(:name, value)
prev_word   '^'
    assigns(:${1:name}, ${2:value})

snippet     er
abbr        <% %>
    <% ${1:code} %>

snippet     erb
abbr        <%= %>
    <%= ${1:output} %>

snippet     reg
abbr        %r()
    %r(${1:reg})${2:i}

snippet     facb
abbr        FactoryGirl.build(:name)
    FactoryGirl.build(${1:name})

snippet     facc
abbr        FactoryGirl.create(:name)
    FactoryGirl.create(${1:name})

snippet     todo
abbr        #TODO
prev_word   '^'
  #TODO ${1:TODO}
